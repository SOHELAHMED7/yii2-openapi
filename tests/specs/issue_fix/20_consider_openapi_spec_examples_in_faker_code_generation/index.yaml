openapi: "3.0.0"
info:
  version: 1.0.0
  title: Consider OpenAPI spec examples in faker code generation https://github.com/php-openapi/yii2-openapi/issues/20. And also generate faker for arrays

paths:
  /pet:
    get:
      summary: get a pet
      operationId: aPet
      responses:
        200:
          description: A pet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"

components:
  schemas:
    User:
      properties:
        id:
          type: integer
        name:
          type: string
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
          example: cat
#          example: ['long-tail', 'short-tail', 'black', 'white']
        age:
          type: integer
          example: 2
        tags:
          type: array
          items:
            type: string
        tags_arbit:
          type: array
          items: { } # array of arbitrary types e.g. [ "hello", -2, true, [5.7], {"id": 5} ]
          minItems: 6
          maxItems: 10
          uniqueItems: true
        #            type: string
        #          example: ['long-tail', 'short-tail', 'black', 'white']
        number_arr:
          type: array
          items:
            type: number

        number_arr_min_uniq:
          type: array
          items:
            type: number
          minItems: 6
          uniqueItems: true

        int_arr:
          type: array
          items:
            type: integer

        int_arr_min_uniq:
          type: array
          items:
            type: integer
          minItems: 7
          uniqueItems: true

        bool_arr:
          type: array
          items:
            type: boolean

        arr_arr_int: # [ [1, 2], [3, 4], [5, 6, 7] ]
          type: array
          items:
            type: array
            items:
              type: integer

        arr_arr_str:
          type: array
          items:
            type: array
            items:
              type: string

        arr_arr_arr_str:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: string

        arr_of_obj:
          type: array
          minItems: 3
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              age:
                type: integer
                minimum: 0
                maximum: 200
              tags:
                type: array
                items:
                  type: string
                uniqueItems: true

              arr_arr_int_2: # [ [1, 2], [3, 4], [5, 6, 7] ]
                type: array
                items:
                  type: array
                  items:
                    type: integer

              appearance:
                type: object
                properties:
                  height:
                    type: integer
                    maximum: 20
                  weight:
                    type: integer

#
#        user_ref_obj_arr:
#          type: array
#          items:
#            $ref: '#/components/schemas/User'

# oneOf
